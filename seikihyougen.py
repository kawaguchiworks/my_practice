"""
正規表現:
文字列をパターンとして表現する方法

正規表現の書き方
[]  集合の中の1文字
[^] 集合の以外の1文字
.   改行以外の1文字
^   文字列の先頭
$   文字列の末尾
*   直前の文字0回以上繰り返し
+   直前の文字1回以上繰り返し
?   直前の文字0/1回繰り返し
{n} 直前の文字n回繰り返し
{n,m}直前の文字n~m回繰り返し
A|B AかBかのどちらか 
"""
"""
reモジュール(正規表現を使うための標準モジュール)
import re
m = re.match(r"正規表現",文字列) 
matchメソッドは先頭がマッチしていればその部分を返す、ない場合はNoneを返す

※raw文字列(r"")とエスケープ文字(\)の違い
r"文字列"(raw文字列)→記号(\n等)を無視して普通の文字列として扱う
\(エスケープ文字)は次の文字に意味を持たせる(ex.\n→改行)

"""
#携帯電話の番号を抽出する場合

#match関数(先頭がマッチしているか)
import re 

s = "090333"
m = re.match(r"[0-9]{3}", s)#0-9の数字は3回繰り返しているか
print(m)#マッチした情報を持つオブジェクトを返す(なければNone)

if m: 
    print(m.group())#一致している部分を取り出し
    print(m.span())#開始インデックスと終了インデックスのタプルを返す

#金額を抽出する場合

#search関数(先頭に限らず、どこか一部マッチしてればok)

s = "bananaは¥300です"
m = re.search(r"¥[1-9][0-9]*", s) #rがあることで"¥"を普通の文字列と認識
print(m)
if m:
    print(m.group())
    print(m.span())

import re

s = "この洋服は$100です"
m = re.search(r"\$[0-9]+", s)
print(m)
if m:
    print(m.group())
    print(m.span())
